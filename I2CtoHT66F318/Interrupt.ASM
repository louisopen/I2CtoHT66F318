; Generated by holtek-gcc v3.19, Sun Aug 16 00:59:52 2020
; 
; Configuration:
;       without long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [1]
acc equ [5]
bp equ [4]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
intc equ [11]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @HCCINIT, @HCCINIT0

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
public _INT0_ISR
#pragma debug scope 2 1
#line 26 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@INT0_ISR_code .section at 4 'code'
_INT0_ISR:
	reti
#line 26 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
public _INT1_ISR
#pragma debug scope 3 1
#line 36 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@INT1_ISR_code .section at 36 'code'
_INT1_ISR:
	reti
#line 36 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
___mfi0 equ [17]
___pb equ [37]
public _MuFunction0_ISR
#pragma debug scope 4 1
#line 47 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@MuFunction0_ISR_code .section at 12 'code'
	mov r1,a
	mov a,status
	mov r2,a
	jmp _MuFunction0_ISR
#pragma debug scope 1 1
@dummy12 proc
	call _MuFunction0_ISR
@dummy12 endp
#pragma debug scope 5 1
_MuFunction0_ISR .section 'code'
_MuFunction0_ISR proc
#line 49 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	snz [17].5
	jmp _L4
#line 51 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	inc _rx_watchdog[0]
#line 52 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	sz _system_flag[0].1
	jmp _L5
#line 54 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	set _system_flag[0].1
#line 55 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	set [37].2
	jmp _L4
_L5:
#line 59 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	clr _system_flag[0].1
#line 60 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	clr [37].2
_L4:
#line 63 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	clr [17].5
	mov a,r2
	mov status,a
	mov a,r1
	reti
_MuFunction0_ISR endp

#line 63 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
___mfi2 equ [19]
public _MuFunction2_ISR
#pragma debug scope 6 1
#line 74 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@MuFunction2_ISR_code .section at 20 'code'
	mov r1,a
	mov a,status
	mov r2,a
	jmp _MuFunction2_ISR
#pragma debug scope 1 1
@dummy20 proc
	call _MuFunction2_ISR
@dummy20 endp
#pragma debug scope 7 1
_MuFunction2_ISR .section 'code'
_MuFunction2_ISR proc
#line 76 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	mov a,[19]
	mov ra,a
#line 79 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	mov a,[19]
	mov ra,a
	mov a,r2
	mov status,a
	mov a,r1
	reti
_MuFunction2_ISR endp

#line 79 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
public _ADC_ISR
#pragma debug scope 8 1
#line 91 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@ADC_ISR_code .section at 24 'code'
_ADC_ISR:
	reti
#line 91 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
public _Timebase0_ISR
#pragma debug scope 9 1
#line 102 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@Timebase0_ISR_code .section at 28 'code'
	mov r1,a
	mov a,status
	mov r2,a
	jmp _Timebase0_ISR
#pragma debug scope 1 1
@dummy28 proc
	call _Timebase0_ISR
@dummy28 endp
#pragma debug scope 10 1
_Timebase0_ISR .section 'code'
_Timebase0_ISR proc
#line 103 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	set _interrupt_flag[0].0
	mov a,r2
	mov status,a
	mov a,r1
	reti
_Timebase0_ISR endp

#line 103 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
public _Timebase1_ISR
#pragma debug scope 11 1
#line 113 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@Timebase1_ISR_code .section at 32 'code'
	mov r1,a
	mov a,status
	mov r2,a
	jmp _Timebase1_ISR
#pragma debug scope 1 1
@dummy32 proc
	call _Timebase1_ISR
@dummy32 endp
#pragma debug scope 12 1
_Timebase1_ISR .section 'code'
_Timebase1_ISR proc
#line 114 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
	set _interrupt_flag[0].1
	mov a,r2
	mov status,a
	mov a,r1
	reti
_Timebase1_ISR endp

#line 114 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
public _UART_ISR
#pragma debug scope 13 1
#line 124 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@UART_ISR_code .section at 44 'code'
_UART_ISR:
	reti
#line 124 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
public _Comparator_ISR
#pragma debug scope 14 1
#line 135 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
@Comparator_ISR_code .section at 8 'code'
_Comparator_ISR:
	reti
#line 135 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
#pragma debug scope 1 1
#line 18 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
public _rx_watchdog
@HCCINIT0 .section 'data'
_rx_watchdog	db 0
#pragma debug variable 8 1 _rx_watchdog "rx_watchdog"

@HCCINIT .section 'data'
#line 17 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
public _isr_temp0
@HCCINIT0 .section 'data'
_isr_temp0	db 0
#pragma debug variable 8 1 _isr_temp0 "isr_temp0"

@HCCINIT .section 'data'
#line 16 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\I2CtoHT66F318\I2CtoHT66F318\Interrupt.C"
public _interrupt_flag
@HCCINIT0 .section 'data'
_interrupt_flag	db 0
#pragma debug struct_begin 42 "__8_bits"
#pragma debug field 21 8 0 1 "b0" ;0,1
#pragma debug field 21 8 0 1 "b1" ;1,1
#pragma debug field 21 8 0 1 "b2" ;2,1
#pragma debug field 21 8 0 1 "b3" ;3,1
#pragma debug field 21 8 0 1 "b4" ;4,1
#pragma debug field 21 8 0 1 "b5" ;5,1
#pragma debug field 21 8 0 1 "b6" ;6,1
#pragma debug field 21 8 0 1 "b7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 43 ""
#pragma debug field 2 42 "bits"
#pragma debug field 0 8 "u8"
#pragma debug field 0 8 "s8"
#pragma debug union_end
#pragma debug variable 43 1 _interrupt_flag "interrupt_flag"

@HCCINIT .section 'data'
#pragma debug struct_begin 44 "__mfi0_bits"
#pragma debug field 21 8 0 1 "__t0pe" ;0,1
#pragma debug field 21 8 0 1 "__t0ae" ;1,1
#pragma debug field 21 8 0 2 ;2,2
#pragma debug field 21 8 0 1 "__t0pf" ;4,1
#pragma debug field 21 8 0 1 "__t0af" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___mfi0 "__mfi0" 1
#pragma debug struct_begin 46 "__mfi2_bits"
#pragma debug field 21 8 0 1 "__lve" ;0,1
#pragma debug field 21 8 0 1 "__dee" ;1,1
#pragma debug field 21 8 0 2 ;2,2
#pragma debug field 21 8 0 1 "__lvf" ;4,1
#pragma debug field 21 8 0 1 "__def" ;5,1
#pragma debug field 21 8 0 2 ;6,2
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 46 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 47 1 ___mfi2 "__mfi2" 1
#pragma debug struct_begin 48 "__pb_bits"
#pragma debug field 21 8 0 1 "__pb0" ;0,1
#pragma debug field 21 8 0 1 "__pb1" ;1,1
#pragma debug field 21 8 0 1 "__pb2" ;2,1
#pragma debug field 21 8 0 1 "__pb3" ;3,1
#pragma debug field 21 8 0 1 "__pb4" ;4,1
#pragma debug field 21 8 0 1 "__pb5" ;5,1
#pragma debug field 21 8 0 1 "__pb6" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 49 ""
#pragma debug field 2 48 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 49 1 ___pb "__pb" 1

; output external variables
extern _system_flag:byte
extern r1:byte
extern r2:byte

; 
; Generated by holtek-gcc v3.19, Sun Aug 16 00:59:52 2020
; Rebuild 718
; end of file
